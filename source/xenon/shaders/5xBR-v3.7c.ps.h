#if 0
//
// Generated by 2.0.20353.0
//
//   fxc /Fh 5xBR-v3.7c.ps.h /Tps_3_0 filters\5xBR-v3.7c.cg /Emain_fragment
//    /VnPS5xBRc
//
//
// Parameters:
//
//   struct
//   {
//       float2 video_size;
//       float2 texture_size;
//       float2 output_size;
//
//   } $IN;
//   
//   sampler2D $decal;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   $IN          c0       2
//   $decal       s0       1
//

// Shader type: pixel 

xps_3_0
defconst $IN.video_size, float, vector, [1, 2], c0
defconst $IN.texture_size, float, vector, [1, 2], c1
defconst $IN.output_size, float, vector, [1, 2], cX
defconst $decal, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=14
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy
dcl_texcoord1 r1

def c252, 0, 0, 0, 0
def c253, 0, 4, 0, 0
def c254, 5.47200012, 14.3520002, 28.1760006, 15
def c255, 2, 1.5, 1, 0.5


    exec
    mad r4, r1, c255.x, r0.xyxy
    dp3 r2.y, r1.zx, c255.z
    dp3 r2.z, r1.wy, c255.z
    add r3, r0.xyxy, -r1
    add r7, r0.xyxy, r1.zwxy
    add r0.zw, r3.xxxy, r1.zzzw
  + movs r0._, r7.z
    exec
    add r9.xy, r7.zw, r1.zw
  + adds_prev r2.x, -r1.z
    add r6.xy, r9.xy, r1.zw
  + movs r0._, r7.w
    add r6.zw, r0.xxxy, r2.yyyz
  + adds_prev r2.y, -r1.w
    tfetch2D r5.x_yz, r2.xy, tf0
    tfetch2D r2.xyz_, r3.zw, tf0
    tfetch2D r8.xyz_, r6.zw, tf0
    exec
    tfetch2D r1.xyz_, r7.zw, tf0
    tfetch2D r14.xyz_, r7.xy, tf0
    tfetch2D r7.x_yz, r6.xy, tf0
    tfetch2D r6.xyz_, r4.xy, tf0
    tfetch2D r9.xyz_, r9.xy, tf0
    tfetch2D r11.xyz_, r4.zw, tf0
    exec
    tfetch2D r10._xyz, r0.zw, tf0
    tfetch2D r4.xyz_, r0.xy, tf0
    tfetch2D r3.xyz_, r3.xy, tf0
    alloc colors
    exec
    dp3 r10.x, r3.zxy, c254.xyz
  + movs r0._, r0.y
    dp3 r7.y, r4.zxy, c254.xyz
  + muls_prev r0.z, c1.y
    dp3 r10.w, r10.wyz, c254.xyz
  + movs r0._, r0.x
    dp3 r10.z, r11.zxy, c254.xyz
  + muls_prev r0.y, c1.x
    dp3 r6.w, r9.zxy, c254.xyz
  + frcs r0.x, r0.z
    dp3 r6.y, r6.zxy, c254.xyz
  + frcs r0.y, r0.y
    exec
    mad r13.yzw, r0.xxy, c255.zzzw, r0.yyyx
    sne r0.w, r7.y, r10.w
    sne r0.z, r10.x, r10.w
    mul r5.y, r0.w, r0.z
    dp3 r10.y, r7.wxz, c254.xyz
    dp3 r7.x, r14.zxy, c254.xyz
    exec
    dp3 r7.z, r1.zxy, c254.xyz
    dp3 r7.w, r8.zxy, c254.xyz
  + movs r0._, -r6.y
    dp3 r6.x, r2.zxy, c254.xyz
  + adds_prev r0.w, r6.w
    dp3 r6.z, r5.wxz, c254.xyz
  + movs r0._, -r10.z
    sne r8.x, r7.y, r6.z
  + adds_prev r4.w, r6.w
    sne r8.w, r6.x, r6.z
  + movs r0._, r13.z
    exec
    add r9.xyz, r7.yyx, -r6.wxz
  + adds_prev r13.x, r0.x
    add r11.xyz, r7.zy, -r10.wwx
  + subs r0.x, r7.yz
    add r6, r7.zyz, -r6.xzyz
  + subs r5.w, r7.zw
    add r12, r7.x, -r10
  + subs r0.z, r7.xz
    sne r8.yz, r7.y, r7.zzx
  + subs r0.y, r7.yx
    sgt r1.w, c254.w, r6_abs.y
  + adds r7.y, r11_abs.xx
    exec
    sgt r2.w, c254.w, r11_abs.y
  + adds r7.x, r9_abs.zz
    sgt r3.w, c254.w, r9_abs.x
  + adds r7.z, r12_abs.xy
    sge r10.xyz, r6_abs.xzw, c254.w
  + movs r0._, r9_abs.x
    sge r12, r12_abs.xwyz, c254.w
  + muls_prev r5.x, c253.y
    sge r9.w, r11_abs.z, r0_abs.y
  + movs r0._, r0_abs.z
    sge r10.w, r9_abs.y, r11_abs.z
  + muls_prev r5.z, c253.y
    exec
    sge r11.w, r0_abs.x, r9_abs.y
  + movs r0._, r6_abs.y
    sge r0.x, r0_abs.y, r0_abs.x
  + adds_prev r7.w, r11_abs.y
    cndgt r0.xyz, r0.x, r1.xyz, r14.xyz
    cndgt r1.xyz, r11.w, r2.xyz, r1.xyz
    cndgt r2.xyz, r10.w, r3.xyz, r2.xyz
    cndgt r3.xyz, r9.w, r14.xyz, r3.xyz
    exec
    sge r10.w, r5_abs.w, c254.w
  + muls r9.x, r12.xy
    sgt r6.yzw, r13.xxyw, c255.xxyz
  + muls r9.y, r12.wz
    sge r7.x, r11_abs.x, r7.x
  + movs r0._, r7.w
    sge r7.y, r9_abs.z, r7.y
  + adds_prev r4.w, r4_abs.w
    mul r9.zw, r10.xxxy, r10.zzzw
  + movs r0._, r7.z
    sne r9, r9, c253.x
  + adds_prev r5.w, r5_abs.w
    exec
    add r7.zw, r9.zzzw, r9.xxxy
  + movs r0._, r5.w
    sne r9.zw, r7.zzzw, c253.x
  + adds_prev r9.x, r6_abs.x
    mul r3.w, r3.w, r9.w
  + movs r0._, r4.w
    sne r5.w, r3.w, c253.x
  + adds_prev r9.y, r0_abs.w
    add r5.xzw, r9.xyyz, r5.xzzw
    sgt r6.x, r5.x, r5.z
  + snes r0.w, r5.w
    exec
    add r0.w, r2.w, r0.w
    sne r0.w, r0.w, c253.x
  + muls r5.z, r8.xw
    add r5.x, r1.w, r0.w
  + muls r5.w, r8.yz
    sne r5, r5.xzyw, c253.x
    mul r5.yz, r7.xxy, r5.yyz
  + muls r5.x, r5.wx
    sne r5.xyz, r5.xyz, c253.x
    exec
    mul r5.xyz, r6.yxw, r5.yxz
    sne r5.xyz, r5.yxz, c253.x
    add r0.w, r6.z, r5.z
    snes r0.w, r0.w
    add r0.w, r0.w, r5.y
    snes r0.w, r0.w
    exece
    mul r0.w, r5.x, r0.w
    cndeq r3.xyz, r0.w, r4.xyz, r3.xyz
    cndeq r2.xyz, r0.w, r3.xyz, r2.xyz
    cndeq r1.xyz, r0.w, r2.xyz, r1.xyz
    cndeq oC0.xyz1, r0.w, r1.xyz, r0.xyz

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD PS5xBRc[] =
{
    0x102a1100, 0x0000014c, 0x000004b4, 0x00000000, 0x00000024, 0x000000fc, 
    0x00000124, 0x00000000, 0x00000000, 0x000000d4, 0x0000001c, 0x000000c7, 
    0xffff0300, 0x00000002, 0x0000001c, 0x00000000, 0x000000c0, 0x00000044, 
    0x00020000, 0x00020000, 0x00000098, 0x00000000, 0x000000a8, 0x00030000, 
    0x00010000, 0x000000b0, 0x00000000, 0x24494e00, 0x76696465, 0x6f5f7369, 
    0x7a6500ab, 0x00010003, 0x00010002, 0x00010000, 0x00000000, 0x74657874, 
    0x7572655f, 0x73697a65, 0x006f7574, 0x7075745f, 0x73697a65, 0x00ababab, 
    0x00000048, 0x00000054, 0x00000064, 0x00000054, 0x00000071, 0x00000054, 
    0x00050000, 0x00010006, 0x00010003, 0x00000080, 0x24646563, 0x616c00ab, 
    0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x30333533, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x00000474, 0x10000e00, 0x00000004, 0x00000000, 
    0x00001842, 0x00030003, 0x00000001, 0x00003050, 0x0000f151, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x40800000, 0x00000000, 
    0x00000000, 0x40af1aa0, 0x4165a1cb, 0x41e16873, 0x41700000, 0x40000000, 
    0x3fc00000, 0x3f800000, 0x3f000000, 0x00006008, 0x600e1200, 0x12000540, 
    0x05556014, 0x301a1200, 0x12000015, 0x00000000, 0x601dc400, 0x12000000, 
    0x00006023, 0x60291200, 0x12000000, 0x0000602f, 0x60351200, 0x12000000, 
    0x0000603b, 0x60411200, 0x12000000, 0x00006047, 0x604d1200, 0x12000000, 
    0x00006053, 0x50591200, 0x22000000, 0xc80f0004, 0x00006ca0, 0xab01ff00, 
    0xc8020002, 0x006ec600, 0xb001ff00, 0xc8040002, 0x00b3c600, 0xb001ff00, 
    0xc80f0003, 0x02a00000, 0xe0000100, 0xc80f0007, 0x00a0aa00, 0xe0000100, 
    0x140c0000, 0x00ac06c6, 0xe0030107, 0x04130209, 0x011a1ac6, 0xe0070101, 
    0x14030006, 0x00b01a1b, 0xe0090107, 0x042c0206, 0x01acf11b, 0xe0000201, 
    0x10085041, 0x1f1ff478, 0x00004000, 0xb8082061, 0x1f1ffe88, 0x00004000, 
    0xb80880c1, 0x1f1ffe88, 0x00004000, 0xb80810e1, 0x1f1ffe88, 0x00004000, 
    0x1008e0e1, 0x1f1ffe88, 0x00004000, 0x100870c1, 0x1f1ff478, 0x00004000, 
    0x10086081, 0x1f1ffe88, 0x00004000, 0x10089121, 0x1f1ffe88, 0x00004000, 
    0xb808b081, 0x1f1ffe88, 0x00004000, 0xb808a001, 0x1f1ff447, 0x00004000, 
    0x10084001, 0x1f1ffe88, 0x00004000, 0x10083061, 0x1f1ffe88, 0x00004000, 
    0x1401000a, 0x00bec0b1, 0xb003fe00, 0x0c420007, 0x00bec0b1, 0x9004fe01, 
    0x1408000a, 0x00c3c06c, 0xb00afe00, 0x0c24000a, 0x00bec06c, 0x900bfe01, 
    0x2c180006, 0x00bec0c6, 0xb009fe00, 0x2c220006, 0x00bec0b1, 0xb006fe00, 
    0xc80e000d, 0x00bc0671, 0xab00ff00, 0xc8080000, 0x00b11b00, 0xe7070a00, 
    0xc8040000, 0x006c1b00, 0xe70a0a00, 0xc8020005, 0x001bc600, 0xe1000000, 
    0xc802000a, 0x00cfc000, 0xb007fe00, 0xc8010007, 0x00bec000, 0xb00efe00, 
    0xc8040007, 0x00bec000, 0xb001fe00, 0x14080007, 0x01bec0b1, 0xb008fe06, 
    0x04810006, 0x00bec01b, 0xb002fe06, 0x14040006, 0x01cfc0c6, 0xb005fe0a, 
    0x04810408, 0x00b1c61b, 0xe7070606, 0x14080008, 0x006cc6c6, 0xe706060d, 
    0x04170d09, 0x0261cf6c, 0xe0070600, 0x6417000b, 0x02b26bb6, 0xe0070a07, 
    0x648f0506, 0x02c2f4cb, 0xe0070607, 0x644f000c, 0x026c0066, 0xe0070a07, 
    0x64260008, 0x00b166bc, 0xe7070707, 0x00280701, 0x001bb16c, 0x65fe868b, 
    0x00180702, 0x001bb1c6, 0x65fe8b89, 0x00480703, 0x001b6c61, 0x65fe898c, 
    0x1407000a, 0x00141b6c, 0xa686fe89, 0x0c1f050c, 0x00f81bb1, 0x868cfefd, 
    0x14080009, 0x00c6b1c6, 0xe68b8080, 0x0c48050a, 0x00b1c6b1, 0xc6898bfd, 
    0x1408000b, 0x006cb1b1, 0xe6808986, 0x04810700, 0x00b16cb1, 0xe680808b, 
    0xc8070000, 0x006cc0c0, 0xee00010e, 0xc8070001, 0x001bc0c0, 0xee0b0201, 
    0xc8070002, 0x001bc0c0, 0xee0a0302, 0xc8070003, 0x001bc0c0, 0xee090e03, 
    0x0818090a, 0x001b1b61, 0xa685fe0c, 0x082e0906, 0x003cfc16, 0xa50dff0c, 
    0x14010007, 0x006c6c1b, 0xe68b0707, 0x04820407, 0x00c6b11b, 0xe6890784, 
    0x140c0009, 0x00ac06c6, 0xe10a0a07, 0x048f0509, 0x00006c1b, 0xa709fd85, 
    0x140c0007, 0x0006ac1b, 0xe0090905, 0x041c0909, 0x00066c6c, 0xa707fd86, 
    0x14080003, 0x001b1b1b, 0xe1030904, 0x04280905, 0x001b6c1b, 0xa703fd80, 
    0xc80d0005, 0x00f00400, 0xe0090500, 0x28810006, 0x006cc61b, 0xe5050505, 
    0xc8080000, 0x001b1b00, 0xe0020000, 0x08480500, 0x001b6c6b, 0xa700fd08, 
    0x08810505, 0x001b1bb6, 0xe0010008, 0xc80f0005, 0x00346c00, 0xa705fd00, 
    0x08160505, 0x00bcc11c, 0xe1070505, 0xc8070005, 0x00c06c00, 0xa705fd00, 
    0xc8070005, 0x001dcd00, 0xe1060500, 0xc8070005, 0x00cd6c00, 0xa705fd00, 
    0xc8080000, 0x00c6c600, 0xe0060500, 0x28800000, 0x0000001b, 0xe2000000, 
    0xc8080000, 0x001bb100, 0xe0000500, 0x28800000, 0x0000001b, 0xe2000000, 
    0xc8080000, 0x006c1b00, 0xe1050000, 0xc8070003, 0x001bc0c0, 0xec000403, 
    0xc8070002, 0x001bc0c0, 0xec000302, 0xc8070001, 0x001bc0c0, 0xec000201, 
    0xc88fc000, 0x001bc0c0, 0xec000100, 0x00000000, 0x00000000, 0x00000000
};
