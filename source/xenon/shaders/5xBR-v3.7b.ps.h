#if 0
//
// Generated by 2.0.20353.0
//
//   fxc /Fh 5xBR-v3.7b.ps.h /Tps_3_0 filters\5xBR-v3.7b.cg /Emain_fragment
//    /VnPS5xBRb
//
//
// Parameters:
//
//   struct
//   {
//       float2 video_size;
//       float2 texture_size;
//       float2 output_size;
//
//   } $IN;
//   
//   sampler2D $decal;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   $IN          c0       2
//   $decal       s0       1
//

// Shader type: pixel 

xps_3_0
defconst $IN.video_size, float, vector, [1, 2], c0
defconst $IN.texture_size, float, vector, [1, 2], c1
defconst $IN.output_size, float, vector, [1, 2], cX
defconst $decal, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=15
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy
dcl_texcoord1 r1

def c252, 0, 0, 0, 0
def c253, 15, 2, 0, 0
def c254, 1.5, 1, 0.5, 0
def c255, 5.47200012, 14.3520002, 28.1760006, 4


    exec
    mad r6, r1, c253.y, r0.xyxy
    dp3 r3.y, r1.zx, c254.y
    dp3 r3.z, r1.wy, c254.y
    add r10, r0.xyxy, -r1
    add r2, r0.xyxy, r1.zwxy
    add r0.zw, r10.xxxy, r1.zzzw
  + movs r0._, r2.z
    exec
    add r7.xy, r2.zw, r1.zw
  + adds_prev r3.x, -r1.z
    add r9.xy, r0.xy, r3.yz
  + movs r0._, r2.w
    add r8.xy, r7.xy, r1.zw
  + adds_prev r3.y, -r1.w
    tfetch2D r12.xyz_, r2.xy, tf0
    tfetch2D r5.xyz_, r0.xy, tf0
    tfetch2D r4.xyz_, r3.xy, tf0
    exec
    tfetch2D r3.xyz_, r10.zw, tf0
    tfetch2D r1._xyz, r6.zw, tf0
    tfetch2D r6.xy_z, r6.xy, tf0
    tfetch2D r7.xyz_, r7.xy, tf0
    tfetch2D r8.xyz_, r8.xy, tf0
    tfetch2D r11.xyz_, r10.xy, tf0
    exec
    tfetch2D r9.xyz_, r9.xy, tf0
    tfetch2D r10.xyz_, r0.zw, tf0
    tfetch2D r2.xyz_, r2.zw, tf0
    alloc colors
    exec
    dp3 r6.z, r2.zxy, c255.xyz
    dp3 r15.y, r10.zxy, c255.xyz
    dp3 r15.w, r9.zxy, c255.xyz
    dp3 r13.x, r11.zxy, c255.xyz
    dp3 r13.y, r8.zxy, c255.xyz
    dp3 r15.z, r7.zxy, c255.xyz
    exec
    dp3 r1.x, r6.wxy, c255.xyz
    dp3 r1.y, r1.wyz, c255.xyz
  + movs r0._, r0.y
    dp3 r15.x, r3.zxy, c255.xyz
  + muls_prev r0.z, c1.y
    dp3 r6.w, r4.zxy, c255.xyz
  + movs r0._, r0.x
    dp3 r13.w, r5.zxy, c255.xyz
  + muls_prev r0.x, c1.x
    dp3 r13.z, r12.zxy, c255.xyz
  + frcs r0.z, r0.z
    exec
    sne r9.x, r13.w, r13.z
  + frcs r0.x, r0.x
    sne r9.y, r15.x, r6.w
  + mulsc r8.x, c254.z, r0.x
    add r6.xy, r15.z, -r1.xy
  + mulsc r8.y, c254.y, r0.z
    add r1.xyz, r13.w, -r15.zyx
  + mulsc r8.z, c254.y, r0.x
    add r7.xyz, r6.z, -r15.yxw
  + subs r14.x, r13.wx
    add r4, r13.wwz, -r6.zwzw
  + subs r14.y, r13.zx
    exec
    sne r10.xy, r13.w, r6.zw
  + subs r14.z, r13.zy
    sne r6.zw, r13.wwwx, r15.y
  + subs r14.w, r13.wz
    sgt r0.w, c253.x, r4_abs.y
  + adds r1.w, r4_abs.ww
    sge r13.x, r7_abs.y, c253.x
  + adds r3.w, r7_abs.xx
    sge r13.yz, r14_abs.yyz, c253.x
  + adds r5.w, r14_abs.yz
    sgt r10.zw, c253.x, r1_abs.yyyx
  + movs r0._, r4_abs.z
    exec
    sge r9.z, r7_abs.z, c253.x
  + muls_prev r12.w, c255.w
    sge r7.w, r14_abs.x, r14_abs.w
  + movs r0._, r1_abs.x
    sge r8.w, r1_abs.z, r14_abs.x
  + muls_prev r0.y, c255.w
    sge r9.w, r4_abs.x, r1_abs.z
  + movs r0._, r4_abs.y
    sge r1.x, r14_abs.w, r4_abs.x
  + adds_prev r2.w, r1_abs.y
    cndgt r1.xyz, r1.x, r2.xyz, r12.xyz
    exec
    cndgt r2.xyz, r9.w, r3.xyz, r2.xyz
    cndgt r3.xyz, r8.w, r11.xyz, r3.xyz
    cndgt r4.xyz, r7.w, r12.xyz, r11.xyz
    add r2.w, r2.w, r6_abs.y
  + movs r0._, r5.w
    add r12.z, r2.w, r6_abs.x
  + adds_prev r2.w, r7_abs.z
    sge r7.z, r4_abs.w, r3.w
  + movs r0._, r2.w
    exec
    mul r9.xyw, r10.xyw, r9.xyz
  + adds_prev r8.w, r7_abs.y
    add r11, r8.yzxw, r0.xxzy
  + snes r13.w, r9.w
    sge r8.z, r7_abs.x, r1.w
  + movs r0._, r11.y
    mul r7.xy, r13.zx, r13.wy
  + adds_prev r0.x, r0.z
    sgt r6.xy, r11.xz, c254.xy
  + snes r12.x, r7.y
    sgt r7.y, r0.x, c253.y
  + snes r12.y, r7.x
    exec
    add r0.xy, r12.xz, r12.yw
    sgt r7.x, r11.w, r0.y
  + snes r0.x, r0.x
    add r0.x, r10.z, r0.x
    snes r0.x, r0.x
    add r9.z, r0.w, r0.x
    sne r8.xyw, r9.xyz, c254.w
    exec
    mul r0.yz, r8.xxz, r8.wwy
  + muls r0.x, r6.zw
    sne r0.xyz, r0.xyz, c254.w
    mul r0.xyz, r7.zxy, r0.xyz
    sne r0.xyz, r0.xyz, c254.w
    mul r0.w, r6.y, r0.x
    snes r0.w, r0.w
    exec
    add r0.w, r6.x, r0.w
    snes r0.w, r0.w
    add r0.w, r0.w, r0.z
    snes r0.x, r0.w
    mul r0.w, r0.y, r0.x
    cndeq r0.xyz, r0.w, r5.xyz, r4.xyz
    exece
    cndeq r0.xyz, r0.w, r0.xyz, r3.xyz
    cndeq r0.xyz, r0.w, r0.xyz, r2.xyz
    cndeq oC0.xyz1, r0.w, r0.xyz, r1.xyz

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD PS5xBRb[] =
{
    0x102a1100, 0x0000014c, 0x0000049c, 0x00000000, 0x00000024, 0x000000fc, 
    0x00000124, 0x00000000, 0x00000000, 0x000000d4, 0x0000001c, 0x000000c7, 
    0xffff0300, 0x00000002, 0x0000001c, 0x00000000, 0x000000c0, 0x00000044, 
    0x00020000, 0x00020000, 0x00000098, 0x00000000, 0x000000a8, 0x00030000, 
    0x00010000, 0x000000b0, 0x00000000, 0x24494e00, 0x76696465, 0x6f5f7369, 
    0x7a6500ab, 0x00010003, 0x00010002, 0x00010000, 0x00000000, 0x74657874, 
    0x7572655f, 0x73697a65, 0x006f7574, 0x7075745f, 0x73697a65, 0x00ababab, 
    0x00000048, 0x00000054, 0x00000064, 0x00000054, 0x00000071, 0x00000054, 
    0x00050000, 0x00010006, 0x00010003, 0x00000080, 0x24646563, 0x616c00ab, 
    0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x30333533, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x0000045c, 0x10000f00, 0x00000004, 0x00000000, 
    0x00001842, 0x00030003, 0x00000001, 0x00003050, 0x0000f151, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x41700000, 0x40000000, 0x00000000, 
    0x00000000, 0x3fc00000, 0x3f800000, 0x3f000000, 0x00000000, 0x40af1aa0, 
    0x4165a1cb, 0x41e16873, 0x40800000, 0x00006008, 0x600e1200, 0x12000540, 
    0x05556014, 0x301a1200, 0x12000015, 0x00000000, 0x601dc400, 0x12000000, 
    0x00006023, 0x60291200, 0x12000000, 0x0000602f, 0x60351200, 0x12000000, 
    0x0000603b, 0x60411200, 0x12000000, 0x00006047, 0x604d1200, 0x12000000, 
    0x00006053, 0x30591200, 0x22000000, 0xc80f0006, 0x0000b1a0, 0xab01fd00, 
    0xc8020003, 0x006eb100, 0xb001fe00, 0xc8040003, 0x00b3b100, 0xb001fe00, 
    0xc80f000a, 0x02a00000, 0xe0000100, 0xc80f0002, 0x00a0aa00, 0xe0000100, 
    0x140c0000, 0x00ac06c6, 0xe00a0102, 0x04130307, 0x011a1ac6, 0xe0020101, 
    0x14030009, 0x00b0c51b, 0xe0000302, 0x04230308, 0x01b01a1b, 0xe0070101, 
    0x1008c041, 0x1f1ffe88, 0x00004000, 0x10085001, 0x1f1ffe88, 0x00004000, 
    0x10084061, 0x1f1ffe88, 0x00004000, 0xb8083141, 0x1f1ffe88, 0x00004000, 
    0xb80810c1, 0x1f1ff447, 0x00004000, 0x100860c1, 0x1f1ff5c8, 0x00004000, 
    0x100870e1, 0x1f1ffe88, 0x00004000, 0x10088101, 0x1f1ffe88, 0x00004000, 
    0x1008b141, 0x1f1ffe88, 0x00004000, 0x10089121, 0x1f1ffe88, 0x00004000, 
    0xb808a001, 0x1f1ffe88, 0x00004000, 0xb8082041, 0x1f1ffe88, 0x00004000, 
    0xc8040006, 0x00bec000, 0xb002ff00, 0xc802000f, 0x00bec000, 0xb00aff00, 
    0xc808000f, 0x00bec000, 0xb009ff00, 0xc801000d, 0x00bec000, 0xb00bff00, 
    0xc802000d, 0x00bec000, 0xb008ff00, 0xc804000f, 0x00bec000, 0xb007ff00, 
    0xc8010001, 0x00bfc000, 0xb006ff00, 0x14020001, 0x00c3c0b1, 0xb001ff00, 
    0x0c41000f, 0x00bec0b1, 0x9003ff01, 0x14080006, 0x00bec06c, 0xb004ff00, 
    0x0c18000d, 0x00bec06c, 0x9005ff01, 0x2c44000d, 0x00bec0c6, 0xb00cff00, 
    0x2c110009, 0x001bc66c, 0xe70d0d00, 0xa8120809, 0x006c1bc0, 0xc70f06fe, 
    0xa8230806, 0x02c6b082, 0xc00f01fe, 0xa8470801, 0x021b6280, 0xc00d0ffe, 
    0x64170e07, 0x02c61d1c, 0xe0060f0d, 0x642f0e04, 0x02cb0acc, 0xe00d060d, 
    0x64430e0a, 0x001b1ac1, 0xe70d060d, 0x648c0e06, 0x005bb116, 0xe70d0f0d, 
    0x00880100, 0x006cb11b, 0x65fd8484, 0x0081030d, 0x00b16c6c, 0xa687fd87, 
    0x0086050d, 0x00c16cb6, 0xa68efd8e, 0x140c000a, 0x006c71c6, 0x65fd8184, 
    0x0c840c09, 0x00c66c1b, 0x8687fdff, 0x14080007, 0x006c1b6c, 0xe68e8e81, 
    0x0c280008, 0x00c66c1b, 0xc6818eff, 0x14080009, 0x006cc6b1, 0xe6848184, 
    0x04810201, 0x001b6cb1, 0xe68e8481, 0xc8070001, 0x006cc0c0, 0xee01020c, 
    0xc8070002, 0x001bc0c0, 0xee090302, 0xc8070003, 0x001bc0c0, 0xee080b03, 
    0xc8070004, 0x001bc0c0, 0xee070c0b, 0x14080002, 0x001bb11b, 0xe0028605, 
    0x0484020c, 0x001b6cc6, 0xe0028687, 0x14040007, 0x001b1b1b, 0xe6840302, 
    0x048b0809, 0x0010c0b1, 0xe10a0987, 0x288f0d0b, 0x00258c1b, 0xe0080009, 
    0x14040008, 0x006c1bb1, 0xe687010b, 0x04130007, 0x006eb3c6, 0xe10d0d00, 
    0x28130c06, 0x00c4b0b1, 0xa50bfe07, 0x28220c07, 0x006cb16c, 0xa500fd07, 
    0xc8030000, 0x00c41900, 0xe00c0c00, 0x28110007, 0x001bb16c, 0xe50b0000, 
    0xc8010000, 0x00c66c00, 0xe00a0000, 0x28100000, 0x0000006c, 0xe2000000, 
    0xc8040009, 0x001b6c00, 0xe0000000, 0xc80b0008, 0x00c01b00, 0xa709fe00, 
    0x08160000, 0x00ccbbcb, 0xe1080806, 0xc8070000, 0x00c01b00, 0xa700fe00, 
    0xc8070000, 0x00bec000, 0xe1070000, 0xc8070000, 0x00c01b00, 0xa700fe00, 
    0xc8080000, 0x00b16c00, 0xe1060000, 0x28800000, 0x0000001b, 0xe2000000, 
    0xc8080000, 0x006c1b00, 0xe0060000, 0x28800000, 0x0000001b, 0xe2000000, 
    0xc8080000, 0x001bc600, 0xe0000000, 0x28100000, 0x0000001b, 0xe2000000, 
    0xc8080000, 0x00b16c00, 0xe1000000, 0xc8070000, 0x001bc0c0, 0xec000504, 
    0xc8070000, 0x001bc0c0, 0xec000003, 0xc8070000, 0x001bc0c0, 0xec000002, 
    0xc88fc000, 0x001bc0c0, 0xec000001, 0x00000000, 0x00000000, 0x00000000
};
