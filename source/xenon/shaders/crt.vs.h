#if 0
//
// Generated by 2.0.20353.0
//
//   fxc /Fh crt.vs.h /Tvs_3_0 filters\crt.cg /Emain_vertex /VnVSCrt
//
//
// Parameters:
//
//   struct
//   {
//       float2 video_size;
//       float2 texture_size;
//       float2 output_size;
//
//   } $IN;
//   
//   float4x4 $modelViewProj;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $modelViewProj c0       4
//   $IN            c4       3
//

// Shader type: vertex 

xvs_3_0
defconst $IN.video_size, float, vector, [1, 2], c4
defconst $IN.texture_size, float, vector, [1, 2], c5
defconst $IN.output_size, float, vector, [1, 2], c6
defconst $modelViewProj, float, matrix_columns, [4, 4], c0-3
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=4
config VsResource=1
// VsExportCount=9

dcl_index r0.x
dcl_texcoord1 o0.xy
dcl_texcoord2 o1.xy
dcl_texcoord3 o2.xy
dcl_texcoord4 o3.xy
dcl_texcoord5 o4.xy
dcl_texcoord6 o5.xy
dcl_texcoord7 o6.xy
dcl_texcoord8 o7.xy
dcl_texcoord9 o8.x
dcl_texcoord10 o9.xy


    exec
    vfetch r2, r0.x, position
    vfetch r0.yx__, r0.x, texcoord
    alloc position
    exec
    mul r1, r2.w, c3.xwzy
    mad r1, r2.z, c2.xwzy, r1
    mad r1, r2.y, c1.xzyw, r1.xzwy
    mad oPos, r2.x, c0, r1.xzyw
    alloc interpolators
    exec
    mov r2.y, r0.x
  + rcp r3.x, c5.x
    add r1.w, -r3.x, r0.y
  + adds r3.z, r3.xx
    mov r1.xy, r0.yx
  + rcp r3.y, c5.y
    add r4.xyz, r3.xyz, r0.yxy
  + mulsc r0.z, c6.x, r0.y
    mul r2.w, r0.z, c5.x
  + movs r1.z, r4.y
    mov r2.xz, r4.zx
  + rcp r0.w, c4.x
    exec
    mul o8.x, r2.w, r0.w
    mov o1.xy, r0.yx
    mul o9.xy, r0.yx, c5.xy
    add o6.xy, r3.xy, r0.yx
    add o7.xy, r3.zy, r0.yx
    mov o0.xy, r1.wy
    exece
    mov o2.xy, r2.zy
    mov o3.xy, r2.xy
    mov o4.xy, r1.wz
    mov o5.xy, r1.xz

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD VSCrt[] =
{
    0x102a1101, 0x00000184, 0x00000144, 0x00000000, 0x00000024, 0x00000000, 
    0x00000104, 0x00000000, 0x00000000, 0x000000dc, 0x0000001c, 0x000000cf, 
    0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x000000c8, 0x00000044, 
    0x00020004, 0x00030000, 0x00000098, 0x00000000, 0x000000a8, 0x00020000, 
    0x00040000, 0x000000b8, 0x00000000, 0x24494e00, 0x76696465, 0x6f5f7369, 
    0x7a6500ab, 0x00010003, 0x00010002, 0x00010000, 0x00000000, 0x74657874, 
    0x7572655f, 0x73697a65, 0x006f7574, 0x7075745f, 0x73697a65, 0x00ababab, 
    0x00000048, 0x00000054, 0x00000064, 0x00000054, 0x00000071, 0x00000054, 
    0x00050000, 0x00010006, 0x00010003, 0x00000080, 0x246d6f64, 0x656c5669, 
    0x65775072, 0x6f6a00ab, 0x00030003, 0x00040004, 0x00010000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x30333533, 0x2e3000ab, 0x00000000, 
    0x00000144, 0x00910004, 0x00000000, 0x00000000, 0x00004d4a, 0x00000001, 
    0x00000002, 0x0000000a, 0x00000290, 0x00100004, 0x00305005, 0x00003051, 
    0x00013152, 0x00023253, 0x00033354, 0x00043455, 0x00053556, 0x00063657, 
    0x00073758, 0x00081859, 0x0009395a, 0x00001015, 0x00001011, 0x00001016, 
    0x00001017, 0x00001018, 0x00001019, 0x00001013, 0x00001014, 0x00001010, 
    0x00001012, 0x30052004, 0x00001200, 0xc2000000, 0x00004006, 0x00001200, 
    0xc4000000, 0x0000600a, 0x60101200, 0x12000000, 0x00004016, 0x00002200, 
    0x00000000, 0x05f82000, 0x00000688, 0x00000000, 0x05f80000, 0x00000fc1, 
    0x00000000, 0xc80f0001, 0x001b8800, 0xa1020300, 0xc80f0001, 0x00c68800, 
    0xab020201, 0xc80f0001, 0x00b13494, 0xab020101, 0xc80f803e, 0x006c0034, 
    0xab020001, 0x4c120302, 0x006c6c6c, 0xc2000005, 0x00480301, 0x046cb16c, 
    0xe0030003, 0x4c230301, 0x006d6db1, 0xc2000005, 0xa8470004, 0x00c0bd41, 
    0xc0030006, 0x14480102, 0x00c66cb1, 0xa1000504, 0x4c850002, 0x006e6e6c, 
    0xc2040404, 0xc8018008, 0x001b1b00, 0xe1020000, 0xc8038001, 0x006d6d00, 
    0xe2000000, 0xc8038009, 0x006db000, 0xa1000500, 0xc8038006, 0x00b06d00, 
    0xe0030000, 0xc8038007, 0x00b26d00, 0xe0030000, 0xc8038000, 0x00b3b300, 
    0xe2010100, 0xc8038002, 0x00b2b200, 0xe2020200, 0xc8038003, 0x00b0b000, 
    0xe2020200, 0xc8038004, 0x00c7c700, 0xe2010100, 0xc8038005, 0x00c4c400, 
    0xe2010100, 0x00000000, 0x00000000, 0x00000000
};
