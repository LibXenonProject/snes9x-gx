#if 0
//
// Generated by 2.0.20353.0
//
//   fxc /Fh 5xBR-v3.7a.ps.h /Tps_3_0 filters\5xBR-v3.7a.cg /Emain_fragment
//    /VnPS5xBRa
//
//
// Parameters:
//
//   struct
//   {
//       float2 video_size;
//       float2 texture_size;
//       float2 output_size;
//
//   } $IN;
//   
//   sampler2D $decal;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   $IN          c0       2
//   $decal       s0       1
//

// Shader type: pixel 

xps_3_0
defconst $IN.video_size, float, vector, [1, 2], c0
defconst $IN.texture_size, float, vector, [1, 2], c1
defconst $IN.output_size, float, vector, [1, 2], cX
defconst $decal, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=13
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord r0.xy
dcl_texcoord1 r1

def c252, 0, 0, 0, 0
def c253, 5.47200012, 14.3520002, 28.1760006, 0
def c254, 1.5, 1, 2, 0.5
def c255, 4, 0, 0, 0


    exec
    mad r8, r1, c254.z, r0.xyxy
    dp3 r2.x, r1.zx, c254.y
    dp3 r2.y, r1.wy, c254.y
    add r3, r0.xyxy, -r1
    add r10, r0.xyxy, r1.zwxy
    add r0.zw, r3.xxxy, r1.zzzw
  + movs r0._, r10.z
    exec
    add r2.zw, r10.zzzw, r1.zzzw
  + adds_prev r9.x, -r1.z
    add r2.xy, r0.xy, r2.xy
  + movs r0._, r10.w
    add r4.xy, r2.zw, r1.zw
  + adds_prev r9.y, -r1.w
    tfetch2D r5.xyz_, r4.xy, tf0
    tfetch2D r6.xyz_, r2.zw, tf0
    tfetch2D r4.xyz_, r0.xy, tf0
    exec
    tfetch2D r1._xyz, r2.xy, tf0
    tfetch2D r11.xyz_, r10.zw, tf0
    tfetch2D r2.xyz_, r3.zw, tf0
    tfetch2D r3.xyz_, r3.xy, tf0
    tfetch2D r7.xyz_, r8.xy, tf0
    tfetch2D r8.xyz_, r8.zw, tf0
    exec
    tfetch2D r10.xyz_, r10.xy, tf0
    tfetch2D r9.xyz_, r9.xy, tf0
    tfetch2D r12.xyz_, r0.zw, tf0
    alloc colors
    exec
    dp3 r12.y, r12.zxy, c253.xyz
    dp3 r12.z, r9.zxy, c253.xyz
    dp3 r12.w, r10.zxy, c253.xyz
    dp3 r0.z, r8.zxy, c253.xyz
    dp3 r0.w, r7.zxy, c253.xyz
    dp3 r13.y, r3.zxy, c253.xyz
    exec
    dp3 r13.z, r2.zxy, c253.xyz
  + movs r0._, r0.y
    dp3 r12.x, r11.zxy, c253.xyz
  + muls_prev r1.x, c1.y
    dp3 r1.z, r1.wyz, c253.xyz
  + movs r0._, r0.x
    dp3 r13.x, r4.zxy, c253.xyz
  + muls_prev r0.y, c1.x
    dp3 r0.x, r6.zxy, c253.xyz
  + frcs r1.x, r1.x
    add r8.x, r13.x, -r0.x
  + frcs r1.y, r0.y
    exec
    dp3 r13.w, r5.zxy, c253.xyz
  + movs r0._, r12.x
    dp3 r6.y, r1.xy, c254.y
  + adds_prev r9.w, -r1.z
    mad r6.xz, r1.yx, c254.wy, r1.xy
    add r5.xy, r0.x, -r0.zw
  + movs r0._, r13.x
    add r9.xyz, r12.xw, -r13.zyw
  + adds_prev r3.w, -r13.y
    add r0, r13.x, -r12.zyxw
  + movs r0._, r13.x
    exec
    sne r7.xyz, r13.x, r12.yxz
  + adds_prev r1.z, -r13.z
    add r8.yzw, r12.wwwx, -r12.xxzy
  + adds r2.w, r0_abs.xy
    sne r1.xyw, r13.xzy, r12.wzy
  + adds r5.z, r8_abs.ww
    sgt r6.xyz, r6.zxy, c254.xyz
  + adds r5.w, r8_abs.zz
    sge r4.w, r3_abs.w, r0_abs.w
  + movs r0._, r7.y
    sge r6.w, r1_abs.z, r3_abs.w
  + muls_prev r3.w, r1.x
    exec
    sge r1.z, r0_abs.z, r1_abs.z
  + movs r0._, r7.z
    sge r0.x, r0_abs.w, r0_abs.z
  + muls_prev r0.w, r1.y
    cndgt r0.xyz, r0.x, r11.xyz, r10.xyz
    cndgt r1.xyz, r1.z, r2.xyz, r11.xyz
    cndgt r2.xyz, r6.w, r3.xyz, r2.xyz
    cndgt r3.xyz, r4.w, r10.xyz, r3.xyz
    exec
    sge r7.yz, r8_abs.zzw, r5.zzw
  + movs r0._, r7.x
    dp4 r5.z, r9_abs, c254.y
  + muls_prev r1.w, r1.w
    add r2.w, r2.w, r5_abs.x
  + snes r5.x, r3.w
    add r5.w, r2.w, r5_abs.y
  + snes r5.y, r1.w
    mad r5.zw, r8_abs.xxxy, c255.x, r5.zzzw
    sgt r7.x, r5.z, r5.w
  + snes r5.z, r0.w
    exec
    mul r5.xyz, r7.xyz, r5.xyz
    sne r5.xyz, r5.xyz, c253.w
    mul r7.xy, r6.yz, r5.yz
    sne r5.yz, r7.xxy, c253.w
    add r0.w, r6.x, r5.y
    snes r0.w, r0.w
    exec
    add r0.w, r0.w, r5.z
    snes r0.w, r0.w
    mul r0.w, r5.x, r0.w
    cndeq r3.xyz, r0.w, r4.xyz, r3.xyz
    cndeq r2.xyz, r0.w, r3.xyz, r2.xyz
    cndeq r1.xyz, r0.w, r2.xyz, r1.xyz
    exece
    cndeq oC0.xyz1, r0.w, r1.xyz, r0.xyz

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD PS5xBRa[] =
{
    0x102a1100, 0x0000014c, 0x000003e8, 0x00000000, 0x00000024, 0x000000fc, 
    0x00000124, 0x00000000, 0x00000000, 0x000000d4, 0x0000001c, 0x000000c7, 
    0xffff0300, 0x00000002, 0x0000001c, 0x00000000, 0x000000c0, 0x00000044, 
    0x00020000, 0x00020000, 0x00000098, 0x00000000, 0x000000a8, 0x00030000, 
    0x00010000, 0x000000b0, 0x00000000, 0x24494e00, 0x76696465, 0x6f5f7369, 
    0x7a6500ab, 0x00010003, 0x00010002, 0x00010000, 0x00000000, 0x74657874, 
    0x7572655f, 0x73697a65, 0x006f7574, 0x7075745f, 0x73697a65, 0x00ababab, 
    0x00000048, 0x00000054, 0x00000064, 0x00000054, 0x00000071, 0x00000054, 
    0x00050000, 0x00010006, 0x00010003, 0x00000080, 0x24646563, 0x616c00ab, 
    0x0004000c, 0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 
    0x2e302e32, 0x30333533, 0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 
    0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000040, 0x000003a8, 0x10000d00, 0x00000004, 0x00000000, 
    0x00001842, 0x00030003, 0x00000001, 0x00003050, 0x0000f151, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x40af1aa0, 0x4165a1cb, 0x41e16873, 
    0x00000000, 0x3fc00000, 0x3f800000, 0x40000000, 0x3f000000, 0x40800000, 
    0x00000000, 0x00000000, 0x00000000, 0x00006007, 0x600d1200, 0x12000540, 
    0x05556013, 0x30191200, 0x12000015, 0x00000000, 0x601cc400, 0x12000000, 
    0x00006022, 0x60281200, 0x12000000, 0x0000602e, 0x60341200, 0x12000000, 
    0x0000603a, 0x60401200, 0x12000000, 0x00006046, 0x104c1200, 0x22000000, 
    0xc80f0008, 0x0000c6a0, 0xab01fe00, 0xc8010002, 0x006eb100, 0xb001fe00, 
    0xc8020002, 0x00b3b100, 0xb001fe00, 0xc80f0003, 0x02a00000, 0xe0000100, 
    0xc80f000a, 0x00a0aa00, 0xe0000100, 0x140c0000, 0x00ac06c6, 0xe003010a, 
    0x041c0902, 0x010606c6, 0xe00a0101, 0x14030002, 0x00b0b01b, 0xe000020a, 
    0x04230904, 0x011a1a1b, 0xe0020101, 0x10085081, 0x1f1ffe88, 0x00004000, 
    0xb8086041, 0x1f1ffe88, 0x00004000, 0x10084001, 0x1f1ffe88, 0x00004000, 
    0x10081041, 0x1f1ff447, 0x00004000, 0xb808b141, 0x1f1ffe88, 0x00004000, 
    0xb8082061, 0x1f1ffe88, 0x00004000, 0x10083061, 0x1f1ffe88, 0x00004000, 
    0x10087101, 0x1f1ffe88, 0x00004000, 0xb8088101, 0x1f1ffe88, 0x00004000, 
    0x1008a141, 0x1f1ffe88, 0x00004000, 0x10089121, 0x1f1ffe88, 0x00004000, 
    0xb808c001, 0x1f1ffe88, 0x00004000, 0xc802000c, 0x00bec000, 0xb00cfd00, 
    0xc804000c, 0x00bec000, 0xb009fd00, 0xc808000c, 0x00bec000, 0xb00afd00, 
    0xc8040000, 0x00bec000, 0xb008fd00, 0xc8080000, 0x00bec000, 0xb007fd00, 
    0xc802000d, 0x00bec000, 0xb003fd00, 0x1404000d, 0x00bec0b1, 0xb002fd00, 
    0x0c11010c, 0x00bec0b1, 0x900bfd01, 0x14040001, 0x00c3c06c, 0xb001fd00, 
    0x0c21000d, 0x00bec06c, 0x9004fd01, 0x2c110100, 0x00bec06c, 0xb006fd01, 
    0x2c210108, 0x026c6cb1, 0xe00d0000, 0x1408000d, 0x00bec06c, 0xb005fd0c, 
    0x04820906, 0x01b0b1c6, 0xb001fe01, 0xc8050006, 0x006db3b0, 0xab01fe01, 
    0x14030005, 0x026c1a6c, 0xe000000d, 0x04870309, 0x031812b1, 0xe00c0d0d, 
    0x140f0000, 0x026c226c, 0xe00d0c0d, 0x04470107, 0x016ccdc6, 0xe70d0c0d, 
    0x008e0208, 0x025b8c61, 0xe00c0c80, 0x004b0501, 0x00b4b71b, 0xe70d0c88, 
    0x00870506, 0x00bec0c6, 0xa506fe88, 0x14080004, 0x001b1bb1, 0xe6838007, 
    0x0c880306, 0x00c61b6c, 0xe6818301, 0x14040001, 0x00c6c6c6, 0xe6808107, 
    0x0c810000, 0x001bc6b1, 0xe6808001, 0xc8070000, 0x006cc0c0, 0xee000b0a, 
    0xc8070001, 0x00c6c0c0, 0xee01020b, 0xc8070002, 0x001bc0c0, 0xee060302, 
    0xc8070003, 0x001bc0c0, 0xee040a03, 0x14060007, 0x0016166c, 0xe6880507, 
    0x0c840105, 0x0000b11b, 0xaf89fe01, 0x28180502, 0x001b6c1b, 0xe0028503, 
    0x28280505, 0x001bb11b, 0xe0028501, 0xc80c0005, 0x00ac6c06, 0xab88ff05, 
    0x28410507, 0x00c61b1b, 0xe5050500, 0xc8070005, 0x00c0c000, 0xe1070500, 
    0xc8070005, 0x00c01b00, 0xa705fd00, 0xc8030007, 0x00c5c500, 0xe1060500, 
    0xc8060005, 0x00bc1b00, 0xa707fd00, 0xc8080000, 0x006cb100, 0xe0060500, 
    0x28800000, 0x0000001b, 0xe2000000, 0xc8080000, 0x001bc600, 0xe0000500, 
    0x28800000, 0x0000001b, 0xe2000000, 0xc8080000, 0x006c1b00, 0xe1050000, 
    0xc8070003, 0x001bc0c0, 0xec000403, 0xc8070002, 0x001bc0c0, 0xec000302, 
    0xc8070001, 0x001bc0c0, 0xec000201, 0xc88fc000, 0x001bc0c0, 0xec000100, 
    0x00000000, 0x00000000, 0x00000000
};
