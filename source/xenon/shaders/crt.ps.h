#if 0
//
// Generated by 2.0.20353.0
//
//   fxc /Fh crt.ps.h /Tps_3_0 filters\crt.cg /Emain_fragment /VnPSCrt
//
//
// Parameters:
//
//   sampler2D $s0;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   $s0          s0       1
//

// Shader type: pixel 

xps_3_0
defconst $s0, sampler2d, object, [1, 1], s0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=12
// PsExportColorCount=1
// PsSampleControl=centers

dcl_texcoord1 r0.xy
dcl_texcoord2 r1.xy
dcl_texcoord3 r2.xy
dcl_texcoord4 r3.xy
dcl_texcoord5 r4.xy
dcl_texcoord6 r5.xy
dcl_texcoord7 r6.xy
dcl_texcoord8 r7.xy
dcl_texcoord9 r8.x
dcl_texcoord10 r9.xy

def c248, 0, 0, 0, 0
def c249, 1.44269502, 0.454544991, 2, 0.263999999
def c250, 0.699999988, 1, 2.70000005, 0.656000018
def c251, 0.25, 1.57079637, 0.300000012, -0.300000012
def c252, 1.00250006, 0.502499998, 1.50250006, 1
def c253, 3.32999992, -3.32999992, 0.5, 6.28318548
def c254, 1.005, 0.00499999989, -3.14159274, 2.00500011
def c255, 0.751250029, 1.00125003, 1.57865071, 0.00785422325


    exec
    tfetch2D r3.xyz_, r3.xy, tf0
    tfetch2D r7.xyz_, r7.xy, tf0
    tfetch2D r4._xyz, r4.xy, tf0
    tfetch2D r10.xyz_, r0.xy, tf0
    tfetch2D r11.xyz_, r1.xy, tf0
    tfetch2D r5.xyz_, r5.xy, tf0
    exec
    tfetch2D r6.xyz_, r6.xy, tf0
    tfetch2D r2.xyz_, r2.xy, tf0
    alloc colors
    exec
    frc r0.yw, r9.xxy
  + mulsc r1.y, c253.z, r8.x
    mul r8.y, -r0.y, c253.z
  + frcs r1.x, r1_abs.y
    mul r9.xw, r0.y, c251.xy
  + subsc r0.x, c254.w, r0.y
    mul r8.xzw, r0.yw, c253.zxxy
  + subsc r0.z, c254.x, r0.y
    cndge r4.x, r1.y, r1.x, -r1.x
    mul r0.xz, r0.zx, r0.zx
    exec
    mul r9.yz, -r0.y, c251.xxy
  + rcp r1.z, r0.x
    add r9, r9.xwzy, c255.xwzy
  + rcp r1.w, r0.z
    add r12, r8.xxy, c252.xyxz
  + sin r9.y, r9.y
    frc r12, r12
  + sin r9.z, r9.z
    mad r12, r12, c253.w, c254.z
    sin r12.x, r12.x
    exec
    frc r0.xz, r9.xw
  + sin r12.y, r12.y
    mul r0.xz, r0.xz, c253.w
  + sin r12.z, r12.z
    add r0, r0.yyzx, c254.xyz
  + sin r12.w, r12.w
    sin r9.x, r0.w
    mul r0.xy, r0.xy, r0.xy
  + sin r9.w, r0.z
    rcp r1.x, r0.x
    exec
    mul r9, r12, r9
  + rcp r1.y, r0.y
    dp4 r0.x, r9.wzxy, r1.wzxy
    mul r1, r9, r1
  + rcp r0.x, r0.x
    mul r1, r1, r0.x
    mul r0.xyz, r1.z, r2.xyz
    mul r2.xyz, r1.z, r6.xyz
    exec
    mad r2.xyz, r1.y, r5.xzy, r2.xzy
    mad r0.xyz, r1.y, r11.xzy, r0.xzy
    mad r0.xyz, r1.x, r10.xyz, r0.xzy
    mad r2.xyz, r1.x, r4.yzw, r2.xzy
    mad_sat r2.xyz, r1.w, r7.xyz, r2.xyz
    mad_sat r0.xyz, r1.w, r3.xyz, r0.xyz
    exec
    log r3.x, r0.x
    mul r4.yzw, r0.xxyz, r0.xxyz
  + log r3.y, r0.y
    mul r1.xyz, r2.xyz, r2.xyz
  + log r5.x, r2.x
    mul r1.xyz, r1.xyz, r1.xyz
  + log r5.y, r2.y
    mul r4.yzw, r4.yyzw, r4.yyzw
  + log r5.z, r2.z
    mad r9.xyz, r1.xyz, c249.z, c249.z
    exec
    mad r0.xyw, r4.yzw, c249.w, c250.w
    mad r2.xyw, r1.xyz, c249.w, c250.w
    mul r5.xyz, r5.xyz, c250.z
  + log r3.z, r0.z
    exp r6.x, r5.x
    exp r6.y, r5.y
    exp r6.z, r5.z
    exec
    rcp r5.x, r2.x
    rcp r5.y, r2.y
    mul r2.xyz, r3.xyz, c250.z
  + rcp r5.z, r2.w
    exp r7.x, r2.x
    exp r7.y, r2.y
    exp r7.z, r2.z
    exec
    rcp r3.x, r0.x
    rcp r3.y, r0.y
    add r0.xyz, r1.xyz, c252.w
  + rcp r3.z, r0.w
    rsq r2.y, r0_abs.x
    add r1.xyz, r4.yzw, c252.w
  + rsq r2.z, r0_abs.y
    rsq r10.x, r1_abs.x
    exec
    add r4, r4, r4
  + rsq r10.y, r1_abs.y
    floor r0.w, r4.x
  + rsq r10.z, r1_abs.z
    mad r1.xy, r0.w, c251.wz, c250.yx
    mul r0.xyw, r8.z, r10.xyz
  + rsq r2.w, r0_abs.z
    add r0.z, r8.w, c253.x
  + log r2.x, r0_abs.x
    mul r8.xyz, r0.z, r2.yzw
  + log r2.z, r0_abs.y
    exec
    log r8.x, r8_abs.x
    log r8.y, r8_abs.y
    log r8.z, r8_abs.z
    mul r0.xyz, r9.xyz, r8.xyz
  + log r2.w, r0_abs.w
    add r4.xyz, r4.yzw, c249.z
  + exp r2.y, r0.x
    mul r4.xyz, r4.xyz, r2.xzw
  + exp r2.z, r0.y
    exec
    exp r4.x, r4.x
    exp r4.y, r4.y
    exp r4.z, r4.z
    mul r0.xyw, -r4.xyz, c249.x
  + exp r2.w, r0.z
    exp r2.x, r0.x
    mul r4.xyz, -r2.yzw, c249.x
  + exp r2.y, r0.y
    exec
    exp r4.x, r4.x
    mul r3.xyz, r7.xyz, r3.xyz
  + exp r4.y, r4.y
    mul r5.xyz, r6.xyz, r5.xyz
  + exp r4.z, r4.z
    mul r0.xyz, r5.xyz, r4.xyz
  + exp r2.z, r0.w
    mad r0.xyz, r3.xyz, r2.xyz, r0.xyz
    mul r0.xyz, r1.xyx, r0.xyz
    exec
    log r0.x, r0_abs.x
    log r0.y, r0_abs.y
    log r0.z, r0_abs.z
    mul r0.xyz, r0.xyz, c249.y
    exp oC0.x001, r0.x
    exp oC0.y, r0.y
    exece
    exp oC0.z, r0.z

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD PSCrt[] =
{
    0x102a1100, 0x000000f0, 0x00000554, 0x00000000, 0x00000024, 0x00000080, 
    0x000000a8, 0x00000000, 0x00000000, 0x00000058, 0x0000001c, 0x0000004b, 
    0xffff0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000044, 0x00000030, 
    0x00030000, 0x00010000, 0x00000034, 0x00000000, 0x24733000, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 
    0x30333533, 0x2e3000ab, 0x00000000, 0x00000003, 0x00000000, 0x00000000, 
    0x00000014, 0x01f80020, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000080, 0x000004d4, 0x10000c00, 0x00000004, 0x00000000, 0x00004d4a, 
    0x03ff03ff, 0x00000001, 0x00003051, 0x00003152, 0x00003253, 0x00003354, 
    0x00003455, 0x00003556, 0x00003657, 0x00003758, 0x00001859, 0x0000395a, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3fb8aa3b, 0x3ee8ba1f, 
    0x40000000, 0x3e872b02, 0x3f333333, 0x3f800000, 0x402ccccd, 0x3f27ef9e, 
    0x3e800000, 0x3fc90fdb, 0x3e99999a, 0xbe99999a, 0x3f8051ec, 0x3f00a3d7, 
    0x3fc051ec, 0x3f800000, 0x40551eb8, 0xc0551eb8, 0x3f000000, 0x40c90fdb, 
    0x3f80a3d7, 0x3ba3d70a, 0xc0490fdb, 0x400051ec, 0x3f4051ec, 0x3f8028f6, 
    0x3fca113a, 0x3c00af00, 0x05556009, 0x200f1200, 0x12000005, 0x00000000, 
    0x6011c400, 0x12000000, 0x00006017, 0x601d1200, 0x12000000, 0x00006023, 
    0x60291200, 0x12000000, 0x0000602f, 0x60351200, 0x12000000, 0x0000603b, 
    0x60411200, 0x12000000, 0x00006047, 0x604d1200, 0x12000000, 0x00006053, 
    0x60591200, 0x12000000, 0x0000605f, 0x10651200, 0x22000000, 0x10083061, 
    0x1f1ffe88, 0x00004000, 0x100870e1, 0x1f1ffe88, 0x00004000, 0x10084081, 
    0x1f1ff447, 0x00004000, 0x1008a001, 0x1f1ffe88, 0x00004000, 0x1008b021, 
    0x1f1ffe88, 0x00004000, 0x100850a1, 0x1f1ffe88, 0x00004000, 0x100860c1, 
    0x1f1ffe88, 0x00004000, 0x10082041, 0x1f1ffe88, 0x00004000, 0xa82a0100, 
    0x00bc00c8, 0xc80900fd, 0x2c120108, 0x04b1c6b1, 0xa100fd81, 0xb8190009, 
    0x00b1b001, 0x8100fbfe, 0xb84d0008, 0x0019ae41, 0x8100fdfe, 0xc8010004, 
    0x01b16c6c, 0xed010101, 0xc8050000, 0x006e6e00, 0xe1000000, 0x4c460109, 
    0x04b1bc6c, 0xa100fb00, 0x4c8f0109, 0x008888c6, 0xa009ff00, 0xc02f090c, 
    0x00bce0b1, 0xa008fc09, 0xc04f090c, 0x000000c6, 0xe80c0009, 0xc80f000c, 
    0x00001bc6, 0x8b0cfdfe, 0xc0100c00, 0x0000006c, 0xe200000c, 0xc0250c00, 
    0x001800b1, 0xe809000c, 0xc0450c00, 0x00c41bc6, 0xa100fd0c, 0xc08f0c00, 
    0x0041c01b, 0xa000fe0c, 0xc0100900, 0x0000001b, 0xe2000000, 0xc0830900, 
    0x00b0b0c6, 0xe1000000, 0x4c100100, 0x0000006c, 0xe2000000, 0x4c2f0109, 
    0x000000b1, 0xe10c0900, 0xc8010000, 0x00a7a700, 0xef090100, 0x4c1f0001, 
    0x0000006c, 0xe1090100, 0xc80f0001, 0x00006c00, 0xe1010000, 0xc8070000, 
    0x00c6c000, 0xe1010200, 0xc8070002, 0x00c6c000, 0xe1010600, 0xc8070002, 
    0x00b1b4b4, 0xeb010502, 0xc8070000, 0x00b1b4b4, 0xeb010b00, 0xc8070000, 
    0x006cc0b4, 0xeb010a00, 0xc8070002, 0x006c15b4, 0xeb010402, 0xc9070002, 
    0x001bc0c0, 0xeb010702, 0xc9070000, 0x001bc0c0, 0xeb010300, 0x40100300, 
    0x0000006c, 0xe2000000, 0x402e0304, 0x00fcfcb1, 0xe1000000, 0x40170501, 
    0x00c0c06c, 0xe1020202, 0x40270501, 0x00c0c0b1, 0xe1010102, 0x404e0504, 
    0x000101c6, 0xe1040402, 0xc8070009, 0x00c0c6c6, 0x8b01f9f9, 0xc80b0000, 
    0x00151b1b, 0x8b04f9fa, 0xc80b0002, 0x00c01b1b, 0x8b01f9fa, 0x40470305, 
    0x00c0c6c6, 0xa105fa00, 0x38100600, 0x0000006c, 0xe2000005, 0x38200600, 
    0x000000b1, 0xe2000005, 0x38400600, 0x000000c6, 0xe2000005, 0x4c100500, 
    0x0000006c, 0xe2000002, 0x4c200500, 0x000000b1, 0xe2000002, 0x4c470502, 
    0x00c0c61b, 0xa103fa02, 0x38100700, 0x0000006c, 0xe2000002, 0x38200700, 
    0x000000b1, 0xe2000002, 0x38400700, 0x000000c6, 0xe2000002, 0x4c100300, 
    0x0000006c, 0xe2000000, 0x4c200300, 0x000000b1, 0xe2000000, 0x4c470300, 
    0x00c01b1b, 0xa001fc00, 0x58200200, 0x0000006c, 0xe2000080, 0x58470201, 
    0x00151bb1, 0xa004fc80, 0x58100a00, 0x0000006c, 0xe2000081, 0x582f0a04, 
    0x000000b1, 0xe0040481, 0x58480a00, 0x006c00c6, 0xea040081, 0xc8030001, 
    0x001bc76d, 0x8b00fbfa, 0x588b0200, 0x00c6c0c6, 0xe1080a80, 0x40140200, 
    0x001b6c6c, 0xa008fd80, 0x40470208, 0x00c615b1, 0xe1000280, 0x40100800, 
    0x0000006c, 0xe2000088, 0x40200800, 0x000000b1, 0xe2000088, 0x40400800, 
    0x000000c6, 0xe2000088, 0x40870200, 0x00c0c01b, 0xe1090880, 0x38270204, 
    0x0015c66c, 0xa004f900, 0x38470204, 0x00c014b1, 0xe1040200, 0x38100400, 
    0x0000006c, 0xe2000004, 0x38200400, 0x000000b1, 0xe2000004, 0x38400400, 
    0x000000c6, 0xe2000004, 0x388b0200, 0x04c06cc6, 0xa104f900, 0x38100200, 
    0x0000006c, 0xe2000000, 0x38270204, 0x04156cb1, 0xa102f900, 0x38100400, 
    0x0000006c, 0xe2000004, 0x38270403, 0x00c0c0b1, 0xe1070304, 0x38470405, 
    0x00c0c0c6, 0xe1060504, 0x38470200, 0x00c0c01b, 0xe1050400, 0xc8070000, 
    0x00c0c0c0, 0xeb030200, 0xc8070000, 0x0060c000, 0xe1010000, 0x40100000, 
    0x0000006c, 0xe2000080, 0x40200000, 0x000000b1, 0xe2000080, 0x40400000, 
    0x000000c6, 0xe2000080, 0xc8070000, 0x00c0b100, 0xa100f900, 0x3898c000, 
    0x0000006c, 0xe2000000, 0x38208000, 0x000000b1, 0xe2000000, 0x38408000, 
    0x000000c6, 0xe2000000, 0x00000000, 0x00000000, 0x00000000
};
