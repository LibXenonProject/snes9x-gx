#if 0
//
// Generated by 2.0.20353.0
//
//   fxc /Fh hq4x.vs.h /Tvs_3_0 filters\hq4x.cg /Emain_vertex /VnVSHQ4x
//
//
// Parameters:
//
//   struct
//   {
//       float2 video_size;
//       float2 texture_size;
//       float2 output_size;
//
//   } $IN;
//   
//   float4x4 $modelViewProj;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   $modelViewProj c0       4
//   $IN            c4       2
//

// Shader type: vertex 

xvs_3_0
defconst $IN.video_size, float, vector, [1, 2], c4
defconst $IN.texture_size, float, vector, [1, 2], c5
defconst $IN.output_size, float, vector, [1, 2], cX
defconst $modelViewProj, float, matrix_columns, [4, 4], c0-3
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1
// VsExportCount=6

dcl_index r0.x
dcl_texcoord o0.xy
dcl_texcoord1 o1
dcl_texcoord2 o2
dcl_texcoord3 o3
dcl_texcoord4 o4
dcl_texcoord5 o5
dcl_texcoord6 o6

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0.5, 0.25, 0, 0


    exec
    vfetch r2, r0.x, position
    vfetch r0.xy__, r0.x, texcoord
    alloc position
    exec
    mul r1, r2.w, c3.xwzy
  + rcp r0.w, c5.x
    mad r1, r2.z, c2.xwzy, r1
    mad r1, r2.y, c1.xzyw, r1.xzwy
    mad oPos, r2.x, c0, r1.xzyw
    alloc interpolators
    exec
    rcp r0.z, c5.y
    mul r1, r0.wzzw, c255.xxy
    mul r0.z, -r1.x, c255.x
    add o2.x, -r0.z, r0.x
    add o2.y, -r1.z, r0.y
    add o2.z, r1.x, r0.x
  + movs o2.w, r0.y
    exec
    add o4.x, r0.z, r0.x
    add o4.y, r1.z, r0.y
    add o4.z, -r1.x, r0.x
  + movs o4.w, r0.y
    add o5.z, r1.x, r0.x
    add o6.z, -r1.x, r0.x
    mov o0.xy, r0.xy
    exece
    add o1.xyw, -r1.wzy, r0.xy
  + movs o1.z, r0.x
    add o3.xyw, r1.wzy, r0.xy
  + movs o3.z, r0.x
    add o5.xyw, -r1.xy, r0.xy
    add o6.xyw, r1.xy, r0.xy

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD VSHQ4x[] =
{
    0x102a1101, 0x000001ac, 0x00000184, 0x00000000, 0x00000024, 0x00000104, 
    0x0000012c, 0x00000000, 0x00000000, 0x000000dc, 0x0000001c, 0x000000cf, 
    0xfffe0300, 0x00000002, 0x0000001c, 0x00000000, 0x000000c8, 0x00000044, 
    0x00020004, 0x00020000, 0x00000098, 0x00000000, 0x000000a8, 0x00020000, 
    0x00040000, 0x000000b8, 0x00000000, 0x24494e00, 0x76696465, 0x6f5f7369, 
    0x7a6500ab, 0x00010003, 0x00010002, 0x00010000, 0x00000000, 0x74657874, 
    0x7572655f, 0x73697a65, 0x006f7574, 0x7075745f, 0x73697a65, 0x00ababab, 
    0x00000048, 0x00000054, 0x00000064, 0x00000054, 0x00000071, 0x00000054, 
    0x00050000, 0x00010006, 0x00010003, 0x00000080, 0x246d6f64, 0x656c5669, 
    0x65775072, 0x6f6a00ab, 0x00030003, 0x00040004, 0x00010000, 0x00000000, 
    0x76735f33, 0x5f300032, 0x2e302e32, 0x30333533, 0x2e3000ab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000144, 0x00610002, 
    0x00000000, 0x00000000, 0x000068e7, 0x00000001, 0x00000002, 0x0000000d, 
    0x00000290, 0x00100004, 0x00305005, 0x00003050, 0x0001f151, 0x0002f252, 
    0x0005f353, 0x0006f454, 0x0009f555, 0x000bf656, 0x00001015, 0x00001016, 
    0x0000000d, 0x0000000e, 0x0000100f, 0x00001017, 0x00000010, 0x00000011, 
    0x00001012, 0x00000013, 0x00001018, 0x00000014, 0x00001019, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x3f000000, 
    0x3e800000, 0x00000000, 0x00000000, 0x30052004, 0x00001200, 0xc2000000, 
    0x00004006, 0x00001200, 0xc4000000, 0x0000600a, 0x60101200, 0x12000000, 
    0x00004016, 0x00002200, 0x00000000, 0x05f82000, 0x00000688, 0x00000000, 
    0x05f80000, 0x00000fc8, 0x00000000, 0x4c8f0001, 0x001b886c, 0x81020305, 
    0xc80f0001, 0x00c68800, 0xab020201, 0xc80f0001, 0x00b13494, 0xab020101, 
    0xc80f803e, 0x006c0034, 0xab020001, 0x4c400000, 0x000000b1, 0xc2000005, 
    0xc80f0001, 0x0007bc00, 0xa100ff00, 0xc8040000, 0x046c6c00, 0xa101ff00, 
    0xc8018002, 0x04c66c00, 0xe0000000, 0xc8028002, 0x04c6b100, 0xe0010000, 
    0x14848002, 0x006c6cb1, 0xe0010000, 0xc8018004, 0x00c66c00, 0xe0000000, 
    0xc8028004, 0x00c6b100, 0xe0010000, 0x14848004, 0x046c6cb1, 0xe0010000, 
    0xc8048005, 0x006c6c00, 0xe0010000, 0xc8048006, 0x046c6c00, 0xe0010000, 
    0xc8038000, 0x00b0b000, 0xe2000000, 0x144b8001, 0x04b7b06c, 0xe0010000, 
    0x144b8003, 0x00b7b06c, 0xe0010000, 0xc80b8005, 0x04b0b000, 0xe0010000, 
    0xc80b8006, 0x00b0b000, 0xe0010000, 0x00000000, 0x00000000, 0x00000000
};
